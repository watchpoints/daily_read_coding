connect  syscon, $OBMYSQL_MS0,admin,$OBMYSQL_PWD,test,$OBMYSQL_PORT;
connection syscon;
connection default;
drop table if exists t1;
create table t1 (c1 int, c2 int);
insert into t1 (c1, c2) values (1, 1);
insert into t1 (c1, c2) values (1, 1);
insert into t1 (c1, c2) values (1, 2);
insert into t1 (c1, c2) values (10, 10);
insert into t1 (c1, c2) values (10, 10);
connection syscon;
connection default;
set @@ob_enable_plan_cache = 0;
explain select c2, sum(c1) from (select distinct c2, c1 from t1) x group by c2;
Query Plan
=========================================
|ID|OPERATOR        |NAME|EST. ROWS|COST|
-----------------------------------------
|0 |MERGE GROUP BY  |    |5        |45  |
|1 | SUBPLAN SCAN   |x   |5        |44  |
|2 |  MERGE DISTINCT|    |5        |43  |
|3 |   SORT         |    |5        |42  |
|4 |    TABLE SCAN  |t1  |5        |37  |
=========================================

Outputs & filters: 
-------------------------------------
  0 - output([x.c2], [T_FUN_SUM(x.c1)]), filter(nil), 
      group([x.c2]), agg_func([T_FUN_SUM(x.c1)])
  1 - output([x.c2], [x.c1]), filter(nil), 
      access([x.c2], [x.c1])
  2 - output([t1.c2], [t1.c1]), filter(nil), 
      distinct([t1.c2], [t1.c1])
  3 - output([t1.c2], [t1.c1]), filter(nil), sort_keys([t1.c2, ASC], [t1.c1, ASC])
  4 - output([t1.c2], [t1.c1]), filter(nil), 
      access([t1.c2], [t1.c1]), partitions(p0)

select c2, sum(c1) from (select distinct c2, c1 from t1) x group by c2;
c2	sum(c1)
1	1
2	1
10	10
explain select c2, sum(c1 + c2) from (select distinct c2, c1 from t1) x group by c2;
Query Plan
=========================================
|ID|OPERATOR        |NAME|EST. ROWS|COST|
-----------------------------------------
|0 |MERGE GROUP BY  |    |5        |45  |
|1 | SUBPLAN SCAN   |x   |5        |44  |
|2 |  MERGE DISTINCT|    |5        |43  |
|3 |   SORT         |    |5        |42  |
|4 |    TABLE SCAN  |t1  |5        |37  |
=========================================

Outputs & filters: 
-------------------------------------
  0 - output([x.c2], [T_FUN_SUM(x.c1 + x.c2)]), filter(nil), 
      group([x.c2]), agg_func([T_FUN_SUM(x.c1 + x.c2)])
  1 - output([x.c2], [x.c1 + x.c2]), filter(nil), 
      access([x.c2], [x.c1])
  2 - output([t1.c2], [t1.c1]), filter(nil), 
      distinct([t1.c2], [t1.c1])
  3 - output([t1.c2], [t1.c1]), filter(nil), sort_keys([t1.c2, ASC], [t1.c1, ASC])
  4 - output([t1.c2], [t1.c1]), filter(nil), 
      access([t1.c2], [t1.c1]), partitions(p0)

select c2, sum(c1 + c2) from (select distinct c2, c1 from t1) x group by c2;
c2	sum(c1 + c2)
1	2
2	3
10	20
explain select c2, sum(c1 + c2), max(c3) from (select c1, c2, c1 + 2 as c3 from (select distinct c2, c1 from t1) x ) y group by c2;
Query Plan
=========================================
|ID|OPERATOR        |NAME|EST. ROWS|COST|
-----------------------------------------
|0 |MERGE GROUP BY  |    |5        |46  |
|1 | SUBPLAN SCAN   |x   |5        |44  |
|2 |  MERGE DISTINCT|    |5        |43  |
|3 |   SORT         |    |5        |42  |
|4 |    TABLE SCAN  |t1  |5        |37  |
=========================================

Outputs & filters: 
-------------------------------------
  0 - output([x.c2], [T_FUN_SUM(x.c1 + x.c2)], [T_FUN_MAX(x.c1 + 2)]), filter(nil), 
      group([x.c2]), agg_func([T_FUN_SUM(x.c1 + x.c2)], [T_FUN_MAX(x.c1 + 2)])
  1 - output([x.c2], [x.c1 + x.c2], [x.c1 + 2]), filter(nil), 
      access([x.c1], [x.c2])
  2 - output([t1.c2], [t1.c1]), filter(nil), 
      distinct([t1.c2], [t1.c1])
  3 - output([t1.c2], [t1.c1]), filter(nil), sort_keys([t1.c2, ASC], [t1.c1, ASC])
  4 - output([t1.c2], [t1.c1]), filter(nil), 
      access([t1.c2], [t1.c1]), partitions(p0)

select c2, sum(c1 + c2), max(c3) from (select c1, c2, c1 + 2 as c3 from (select distinct c2, c1 from t1) x ) y group by c2;
c2	sum(c1 + c2)	max(c3)
1	2	3
2	3	3
10	20	12
explain select * from t1 where c2 in (select 1 from t1);
Query Plan
=======================================
|ID|OPERATOR     |NAME |EST. ROWS|COST|
---------------------------------------
|0 |HASH JOIN    |     |1        |77  |
|1 | SUBPLAN SCAN|VIEW1|1        |37  |
|2 |  TABLE SCAN |t1   |1        |36  |
|3 | TABLE SCAN  |t1   |5        |37  |
=======================================

Outputs & filters: 
-------------------------------------
  0 - output([t1.c1], [t1.c2]), filter(nil), 
      equal_conds([t1.c2 = VIEW1.1]), other_conds(nil)
  1 - output([VIEW1.1]), filter(nil), 
      access([VIEW1.1])
  2 - output([1]), filter(nil), 
      access([t1.__pk_increment]), partitions(p0), 
      limit(1), offset(nil)
  3 - output([t1.c2], [t1.c1]), filter(nil), 
      access([t1.c2], [t1.c1]), partitions(p0)

select * from t1 where c2 in (select 1 from t1);
c1	c2
1	1
1	1
connection syscon;
