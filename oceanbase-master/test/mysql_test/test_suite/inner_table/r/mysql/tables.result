use information_schema;
select table_name from tables where table_schema = 'oceanbase' and table_name like '__all_table';
table_name
select table_name from tables where table_schema = 'oceanbase' and table_type like 'SYSTEM VIEW';
table_name
drop database if exists nijia;
create database nijia;
use nijia;
create table t1(c1 int, c2 int);
create view v as select * from t1;
select table_name from information_schema.tables where table_schema = 'nijia' and table_type like 'BASE TABLE';
table_name
t1
select table_name from information_schema.tables where table_schema = 'nijia' and table_type like 'VIEW';
table_name
v
drop database nijia;
show create table information_schema.tables;
View	Create View	character_set_client	collation_connection
TABLES	CREATE VIEW `TABLES` AS select /*+ READ_CONSISTENCY(WEAK), use_merge(b, c, d, e)*/ 'def' as TABLE_CATALOG,                     b.database_name as TABLE_SCHEMA,                     a.table_name as TABLE_NAME,                     case when a.database_id & 0xFFFFFFFFFF = 2 then 'SYSTEM VIEW' when (a.table_type = 1 or a.table_type = 4) then 'VIEW' when a.table_type = 2 then 'SYSTEM TABLE' when a.table_type = 1 then 'INDEX' else 'BASE TABLE' end as TABLE_TYPE,                     NULL as ENGINE,                     NULL as VERSION,                     NULL as ROW_FORMAT,                     sum(c.row_count) as TABLE_ROWS,                     case when sum(c.row_count) = 0 then 0 else sum(c.data_size)/sum(c.row_count) end as AVG_ROW_LENGTH,                     sum(c.data_size) as DATA_LENGTH,                     NULL as MAX_DATA_LENGTH,                     NULL as INDEX_LENGTH,                     NULL as DATA_FREE,                     NULL as AUTO_INCREMENT,                     a.gmt_create as CREATE_TIME,                     a.gmt_modified as UPDATE_TIME,                     NULL as CHECK_TIME,                     d.collation as TABLE_COLLATION,                     cast(NULL as unsigned) as CHECKSUM,                     NULL as CREATE_OPTIONS,                     a.comment as TABLE_COMMENT                     from oceanbase.__all_virtual_table a                     inner join oceanbase.__all_virtual_database b on a.database_id = b.database_id                     left join oceanbase.__all_virtual_tenant_partition_meta_table c on a.table_id = c.table_id and c.tenant_id = effective_tenant_id() and a.tenant_id = c.tenant_id and c.role = 1                     inner join oceanbase.__all_collation d on a.collation_type = d.id                     where a.tenant_id = effective_tenant_id() and b.tenant_id = effective_tenant_id() and a.table_type != 5 and b.database_name != '__recyclebin' and b.in_recyclebin = 0                     group by a.table_id, b.database_name, a.table_name, a.table_type, a.gmt_create, a.gmt_modified, d.collation, a.comment 	utf8mb4	utf8mb4_general_ci
desc information_schema.tables;
Field	Type	Null	Key	Default	Extra
TABLE_CATALOG	varchar(3)	NO			
TABLE_SCHEMA	varchar(128)	NO			
TABLE_NAME	varchar(256)	NO			
TABLE_TYPE	varchar(12)	NO			
ENGINE	null	NO			
VERSION	null	NO			
ROW_FORMAT	null	NO			
TABLE_ROWS	decimal(20,0)	NO		NULL	
AVG_ROW_LENGTH	decimal(24,4)	NO			
DATA_LENGTH	decimal(20,0)	NO		NULL	
MAX_DATA_LENGTH	null	NO			
INDEX_LENGTH	null	NO			
DATA_FREE	null	NO			
AUTO_INCREMENT	null	NO			
CREATE_TIME	timestamp(6)	NO		NULL	
UPDATE_TIME	timestamp(6)	NO		NULL	
CHECK_TIME	null	NO			
TABLE_COLLATION	varchar(128)	NO			
CHECKSUM	bigint(0) unsigned	NO			
CREATE_OPTIONS	null	NO			
TABLE_COMMENT	varchar(4096)	NO			
connect  mysql_jianhua,$OBMYSQL_MS0,root@mysql,'',test,$OBMYSQL_PORT;
connection mysql_jianhua;
drop table t1;
drop view v1;
drop view vv1;
drop view vst1;
drop view vsv1;
drop public synonym st1 force;
drop public synonym sv1 force;
drop synonym st1 force;
drop synonym sv1 force;
drop synonym sst1 force;
drop synonym ssv1 force;
drop public synonym t1 force;
drop public synonym v1 force;
drop view nv1;
drop view njv1;
drop view nuv1;
create table t1 (c1 int, c2 varchar(10));
insert into t1 values (12, "12");
create view v1 as select * from t1;
create view vv1 as select * from v1;
create public synonym st1 for t1;
create public synonym sv1 for v1;
create synonym st1 for t1;
create synonym sv1 for v1;
create synonym sst1 for st1;
create synonym ssv1 for sv1;
create public synonym t1 for t1;
create public synonym v1 for v1;
create view vst1 as select * from st1;
create view vsv1 as select * from sv1;
create view nv1 as select c1, c2 from t1 a;
create view njv1 as select a.c2 as a_c2, b.c2 as b_c2 from t1 a join t1 b on a.c1=b.c1;
create view nuv1 as select c.c2, c.c1 from (select c1, c2 from t1 union select c1, c2 from t1) as c;
connect  ob_sys_check_schema,$OBMYSQL_MS0,admin,$OBMYSQL_PWD,test,$OBMYSQL_PORT;
connection ob_sys_check_schema;
disconnect ob_sys_check_schema;
connect  sys_jianhua,$OBMYSQL_MS0,root@sys,,oceanbase,$OBMYSQL_PORT;
connection sys_jianhua;
SELECT tenant_name, database_name, table_name, table_type, part_num, complex_table_type, level1_decoded_db_name, level1_decoded_table_name,  level2_decoded_db_name,  level2_decoded_table_name FROM oceanbase.__all_virtual_proxy_schema WHERE tenant_name = 'mysql' AND database_name = 'test1' AND table_name = 'addd' AND partition_id = 0 AND sql_port > 0 ORDER BY role ASC LIMIT 1;
tenant_name	database_name	table_name	table_type	part_num	complex_table_type	level1_decoded_db_name	level1_decoded_table_name	level2_decoded_db_name	level2_decoded_table_name
SELECT tenant_name, database_name, table_name, table_type, part_num, complex_table_type, level1_decoded_db_name, level1_decoded_table_name,  level2_decoded_db_name,  level2_decoded_table_name FROM oceanbase.__all_virtual_proxy_schema WHERE tenant_name = 'mysql' AND database_name = 'test' AND table_name = 'addd' AND partition_id = 0 AND sql_port > 0 ORDER BY role ASC LIMIT 1;
tenant_name	database_name	table_name	table_type	part_num	complex_table_type	level1_decoded_db_name	level1_decoded_table_name	level2_decoded_db_name	level2_decoded_table_name
SELECT tenant_name, database_name, table_name, table_type, part_num, complex_table_type, level1_decoded_db_name, level1_decoded_table_name,  level2_decoded_db_name,  level2_decoded_table_name FROM oceanbase.__all_virtual_proxy_schema WHERE tenant_name = 'mysql' AND database_name = 'test' AND table_name = 't1' AND partition_id = 0 AND sql_port > 0 ORDER BY role ASC LIMIT 1;
tenant_name	database_name	table_name	table_type	part_num	complex_table_type	level1_decoded_db_name	level1_decoded_table_name	level2_decoded_db_name	level2_decoded_table_name
mysql	test	t1	3	1	0				
SELECT tenant_name, database_name, table_name, table_type, part_num, complex_table_type, level1_decoded_db_name, level1_decoded_table_name,  level2_decoded_db_name,  level2_decoded_table_name FROM oceanbase.__all_virtual_proxy_schema WHERE tenant_name = 'mysql' AND database_name = 'test' AND table_name = 'v1' AND partition_id = 0 AND sql_port > 0 ORDER BY role ASC LIMIT 1;
tenant_name	database_name	table_name	table_type	part_num	complex_table_type	level1_decoded_db_name	level1_decoded_table_name	level2_decoded_db_name	level2_decoded_table_name
mysql	test	v1	3	1	2	test	t1		
SELECT tenant_name, database_name, table_name, table_type, part_num, complex_table_type, level1_decoded_db_name, level1_decoded_table_name,  level2_decoded_db_name,  level2_decoded_table_name FROM oceanbase.__all_virtual_proxy_schema WHERE tenant_name = 'mysql' AND database_name = 'test' AND table_name = 'vv1' AND partition_id = 0 AND sql_port > 0 ORDER BY role ASC LIMIT 1;
tenant_name	database_name	table_name	table_type	part_num	complex_table_type	level1_decoded_db_name	level1_decoded_table_name	level2_decoded_db_name	level2_decoded_table_name
SELECT tenant_name, database_name, table_name, table_type, part_num, complex_table_type, level1_decoded_db_name, level1_decoded_table_name,  level2_decoded_db_name,  level2_decoded_table_name FROM oceanbase.__all_virtual_proxy_schema WHERE tenant_name = 'mysql' AND database_name = 'test' AND table_name = 'st1' AND partition_id = 0 AND sql_port > 0 ORDER BY role ASC LIMIT 1;
tenant_name	database_name	table_name	table_type	part_num	complex_table_type	level1_decoded_db_name	level1_decoded_table_name	level2_decoded_db_name	level2_decoded_table_name
mysql	test	st1	3	1	1	test	t1		
SELECT tenant_name, database_name, table_name, table_type, part_num, complex_table_type, level1_decoded_db_name, level1_decoded_table_name,  level2_decoded_db_name,  level2_decoded_table_name FROM oceanbase.__all_virtual_proxy_schema WHERE tenant_name = 'mysql' AND database_name = 'test' AND table_name = 'sv1' AND partition_id = 0 AND sql_port > 0 ORDER BY role ASC LIMIT 1;
tenant_name	database_name	table_name	table_type	part_num	complex_table_type	level1_decoded_db_name	level1_decoded_table_name	level2_decoded_db_name	level2_decoded_table_name
mysql	test	sv1	3	1	4	test	v1	test	t1
SELECT tenant_name, database_name, table_name, table_type, part_num, complex_table_type, level1_decoded_db_name, level1_decoded_table_name,  level2_decoded_db_name,  level2_decoded_table_name FROM oceanbase.__all_virtual_proxy_schema WHERE tenant_name = 'mysql' AND database_name = 'test' AND table_name = 'sst1' AND partition_id = 0 AND sql_port > 0 ORDER BY role ASC LIMIT 1;
tenant_name	database_name	table_name	table_type	part_num	complex_table_type	level1_decoded_db_name	level1_decoded_table_name	level2_decoded_db_name	level2_decoded_table_name
SELECT tenant_name, database_name, table_name, table_type, part_num, complex_table_type, level1_decoded_db_name, level1_decoded_table_name,  level2_decoded_db_name,  level2_decoded_table_name FROM oceanbase.__all_virtual_proxy_schema WHERE tenant_name = 'mysql' AND database_name = 'test' AND table_name = 'ssv1' AND partition_id = 0 AND sql_port > 0 ORDER BY role ASC LIMIT 1;
tenant_name	database_name	table_name	table_type	part_num	complex_table_type	level1_decoded_db_name	level1_decoded_table_name	level2_decoded_db_name	level2_decoded_table_name
SELECT tenant_name, database_name, table_name, table_type, part_num, complex_table_type, level1_decoded_db_name, level1_decoded_table_name,  level2_decoded_db_name,  level2_decoded_table_name FROM oceanbase.__all_virtual_proxy_schema WHERE tenant_name = 'mysql' AND database_name = 'test' AND table_name = 'vst1' AND partition_id = 0 AND sql_port > 0 ORDER BY role ASC LIMIT 1;
tenant_name	database_name	table_name	table_type	part_num	complex_table_type	level1_decoded_db_name	level1_decoded_table_name	level2_decoded_db_name	level2_decoded_table_name
mysql	test	vst1	3	1	3	test	st1	test	t1
SELECT tenant_name, database_name, table_name, table_type, part_num, complex_table_type, level1_decoded_db_name, level1_decoded_table_name,  level2_decoded_db_name,  level2_decoded_table_name FROM oceanbase.__all_virtual_proxy_schema WHERE tenant_name = 'mysql' AND database_name = 'test' AND table_name = 'vsv1' AND partition_id = 0 AND sql_port > 0 ORDER BY role ASC LIMIT 1;
ERROR 42S22: view invalid
SELECT tenant_name, database_name, table_name, table_type, part_num, complex_table_type, level1_decoded_db_name, level1_decoded_table_name,  level2_decoded_db_name,  level2_decoded_table_name FROM oceanbase.__all_virtual_proxy_schema WHERE tenant_name = 'mysql' AND database_name = '__public' AND table_name = 'st1' AND partition_id = 0 AND sql_port > 0 ORDER BY role ASC LIMIT 1;
tenant_name	database_name	table_name	table_type	part_num	complex_table_type	level1_decoded_db_name	level1_decoded_table_name	level2_decoded_db_name	level2_decoded_table_name
mysql	__public	st1	3	1	1	test	t1		
SELECT tenant_name, database_name, table_name, table_type, part_num, complex_table_type, level1_decoded_db_name, level1_decoded_table_name,  level2_decoded_db_name,  level2_decoded_table_name FROM oceanbase.__all_virtual_proxy_schema WHERE tenant_name = 'mysql' AND database_name = '__public' AND table_name = 'sv1' AND partition_id = 0 AND sql_port > 0 ORDER BY role ASC LIMIT 1;
tenant_name	database_name	table_name	table_type	part_num	complex_table_type	level1_decoded_db_name	level1_decoded_table_name	level2_decoded_db_name	level2_decoded_table_name
mysql	__public	sv1	3	1	4	test	v1	test	t1
SELECT tenant_name, database_name, table_name, table_type, part_num, complex_table_type, level1_decoded_db_name, level1_decoded_table_name,  level2_decoded_db_name,  level2_decoded_table_name FROM oceanbase.__all_virtual_proxy_schema WHERE tenant_name = 'mysql' AND database_name = '__public' AND table_name = 'sst1' AND partition_id = 0 AND sql_port > 0 ORDER BY role ASC LIMIT 1;
tenant_name	database_name	table_name	table_type	part_num	complex_table_type	level1_decoded_db_name	level1_decoded_table_name	level2_decoded_db_name	level2_decoded_table_name
SELECT tenant_name, database_name, table_name, table_type, part_num, complex_table_type, level1_decoded_db_name, level1_decoded_table_name,  level2_decoded_db_name,  level2_decoded_table_name FROM oceanbase.__all_virtual_proxy_schema WHERE tenant_name = 'mysql' AND database_name = '__public' AND table_name = 'ssv1' AND partition_id = 0 AND sql_port > 0 ORDER BY role ASC LIMIT 1;
tenant_name	database_name	table_name	table_type	part_num	complex_table_type	level1_decoded_db_name	level1_decoded_table_name	level2_decoded_db_name	level2_decoded_table_name
SELECT tenant_name, database_name, table_name, table_type, part_num, complex_table_type, level1_decoded_db_name, level1_decoded_table_name,  level2_decoded_db_name,  level2_decoded_table_name FROM oceanbase.__all_virtual_proxy_schema WHERE tenant_name = 'mysql' AND database_name = 'test' AND table_name = 'nv1' AND partition_id = 0 AND sql_port > 0 ORDER BY role ASC LIMIT 1;
tenant_name	database_name	table_name	table_type	part_num	complex_table_type	level1_decoded_db_name	level1_decoded_table_name	level2_decoded_db_name	level2_decoded_table_name
mysql	test	nv1	3	1	2	test	t1		
SELECT tenant_name, database_name, table_name, table_type, part_num, complex_table_type, level1_decoded_db_name, level1_decoded_table_name,  level2_decoded_db_name,  level2_decoded_table_name FROM oceanbase.__all_virtual_proxy_schema WHERE tenant_name = 'mysql' AND database_name = 'test' AND table_name = 'njv1' AND partition_id = 0 AND sql_port > 0 ORDER BY role ASC LIMIT 1;
tenant_name	database_name	table_name	table_type	part_num	complex_table_type	level1_decoded_db_name	level1_decoded_table_name	level2_decoded_db_name	level2_decoded_table_name
mysql	test	njv1	3	1	2	test	t1		
SELECT tenant_name, database_name, table_name, table_type, part_num, complex_table_type, level1_decoded_db_name, level1_decoded_table_name,  level2_decoded_db_name,  level2_decoded_table_name FROM oceanbase.__all_virtual_proxy_schema WHERE tenant_name = 'mysql' AND database_name = 'test' AND table_name = 'nuv1' AND partition_id = 0 AND sql_port > 0 ORDER BY role ASC LIMIT 1;
tenant_name	database_name	table_name	table_type	part_num	complex_table_type	level1_decoded_db_name	level1_decoded_table_name	level2_decoded_db_name	level2_decoded_table_name
SELECT tenant_name, database_name, table_name, table_type, part_num, complex_table_type, level1_decoded_db_name, level1_decoded_table_name,  level2_decoded_db_name,  level2_decoded_table_name FROM oceanbase.__all_virtual_proxy_schema WHERE tenant_name = 'sys' AND database_name = 'oceanbase' AND table_name = 'gv$unit' AND partition_id = 0 AND sql_port > 0 ORDER BY role ASC LIMIT 1;
tenant_name	database_name	table_name	table_type	part_num	complex_table_type	level1_decoded_db_name	level1_decoded_table_name	level2_decoded_db_name	level2_decoded_table_name
sys	oceanbase	gv$unit	0	1	2	oceanbase	__all_resource_pool		
SELECT tenant_name, database_name, table_name, table_type, part_num, complex_table_type, level1_decoded_db_name, level1_decoded_table_name,  level2_decoded_db_name,  level2_decoded_table_name FROM oceanbase.__all_virtual_proxy_schema WHERE tenant_name = 'sys' AND database_name = 'oceanbase' AND table_name = 'gv$partition' AND partition_id = 0 AND sql_port > 0 ORDER BY role ASC LIMIT 1;
tenant_name	database_name	table_name	table_type	part_num	complex_table_type	level1_decoded_db_name	level1_decoded_table_name	level2_decoded_db_name	level2_decoded_table_name
disconnect sys_jianhua;
connection mysql_jianhua;
drop table t1;
drop view v1;
drop view vv1;
drop view vst1;
drop view vsv1;
drop public synonym st1 force;
drop public synonym sv1 force;
drop synonym st1 force;
drop synonym sv1 force;
drop synonym sst1 force;
drop synonym ssv1 force;
drop public synonym t1 force;
drop public synonym v1 force;
drop view nv1;
drop view njv1;
drop view nuv1;
disconnect mysql_jianhua;
